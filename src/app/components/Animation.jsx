import React, { useRef, useState } from "react";
import { Canvas, useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import useMousePosition from "./useMousePosition";
import {Model} from "./Strawhat_duck";
import { easing } from "maath";

export default function Animation() {
  return (
    <Canvas>
      <ambientLight intensity={Math.PI / 2} />
      <spotLight
        position={[10, 10, 10]}
        angle={0.15}
        penumbra={1}
        decay={0}
        intensity={Math.PI}
      />
      <pointLight position={[-10, -10, -10]} decay={0} intensity={Math.PI} />
      <Model />
    </Canvas>
  );
}

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/strawhat_duck/scene.gltf 
Author: LiliumLetifer (https://sketchfab.com/LiliumLetifer)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/strawhat-duck-f7a566abe0fa4cc8962e30aa5526dcb3
Title: Strawhat Duck
*/

function Duck(props) {
  const mousePosition = useMousePosition();
  // This reference will give us direct access to the mesh
  const meshRef = useRef();
  // Subscribe this component to the render-loop, rotate the mesh every frame
  useFrame((state, delta) => {
    easing.dampE(
      meshRef.current.rotation,
      [mousePosition.y / window.innerHeight * 2, mousePosition.x / window.innerWidth * 2, 0],
      1,
      0.1
    );
  });
  const { nodes, materials } = useGLTF("./public/strawhat_duck/scene.gltf");
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.002}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.defaultMaterial.geometry} material={materials.Material} />
            <mesh geometry={nodes.defaultMaterial_1.geometry} material={materials.Outline} />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.defaultMaterial_2.geometry} material={materials.Material} />
            <mesh geometry={nodes.defaultMaterial_3.geometry} material={materials.Outline} />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.defaultMaterial_4.geometry} material={materials.Material} />
            <mesh geometry={nodes.defaultMaterial_5.geometry} material={materials.Outline} />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.defaultMaterial_6.geometry} material={materials.Material} />
            <mesh geometry={nodes.defaultMaterial_7.geometry} material={materials.Outline} />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.defaultMaterial_8.geometry} material={materials.Material} />
            <mesh geometry={nodes.defaultMaterial_9.geometry} material={materials.Outline} />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.defaultMaterial_10.geometry} material={materials.Material} />
            <mesh geometry={nodes.defaultMaterial_11.geometry} material={materials.Outline} />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh geometry={nodes.defaultMaterial_12.geometry} material={materials.Material} />
            <mesh geometry={nodes.defaultMaterial_13.geometry} material={materials.Outline} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload("./public/strawhat_duck/scene.gltf");